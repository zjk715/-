#include<cstdio>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
typedef long long ll;
using namespace std;

struct point {
	double x, y;
}a[100000],b[100000];

bool cmp1(point p, point q) {
	return p.x < q.x;
}

bool cmp2(point p, point q) {
	return p.y < q.y;
}

double dis(point p, point q) {
	double ans = sqrt((p.x - q.x) * (p.x - q.x) + (p.y - q.y) * (p.y - q.y));
	return ans;
}

double closest(int left, int right) {
	if (right - left + 1 == 2)	return dis(a[left], a[right]);
	if (right - left + 1 == 3)	return min(dis(a[left], a[left + 1]), min(dis(a[left + 1], a[right]), dis(a[left], a[right])));
	int mid = (left + right) / 2;
	double ans = min(closest(left, mid), closest(mid + 1, right));
	int f = 0;
	for (int i = left; i <= right; i++) {
		if (fabs(a[i].x - a[mid].x) <= ans) {
			f++; b[f] = a[i];
		}
	}
	sort(b + 1, b + f + 1, cmp2);
	for (int i = 1; i <= f; i++) {
		for (int j = i + 1; j <= f && j < i + 6; j++) {
			ans = min(ans, dis(b[i], b[j]));
		}
	}
	return ans;
}

int main() {
	int n;
    double ans;
	scanf("%d", &n);
	for (int i = 1; i <= n; i++)	scanf("%lf %lf", &a[i].x, &a[i].y);
	sort(a + 1, a + 1 + n, cmp1);
	ans = closest(1, n);
	printf("%f", ans);
}
